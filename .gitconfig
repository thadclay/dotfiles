[user]
 name = xxxxxx xxxx
 email = xxxx@xxx.com
[alias]
 a = add
 aa = !git add -A . && git status
 b = branch -a --color
 c = commit -m
 ca = commit --amend -C HEAD
 co = checkout
 cob = checkout -b
 cor = !sh -c 'git checkout -b $1 origin/release' -
 del = !sh -c 'git branch -d $1' -
 done = !git remote prune origin 2> /dev/null && git fetch && git rebase -i origin/master && _bname=`git rev-parse --abbrev-ref HEAD` && git checkout master && git merge @{-1} && git push && git branch -D $_bname && git push origin :qa/$_bname
 ir = !git rebase -i origin/master
 lf = !sh -c 'git lg --grep=$1 --max-count=5' -
 lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
 next = "!git add . && git rebase --continue"
 qa = !git remote prune origin 2> /dev/null && git push -u origin `git rev-parse --abbrev-ref HEAD`:qa/`git rev-parse --abbrev-ref HEAD`
 rmb = !sh -c 'git branch -D $1 && git push origin :$1' -
 st = status
 today = log --stat --since='1 Day Ago' --graph --pretty=oneline --abbrev-commit --date=relative
 unadd = reset HEAD
 up = !git fetch origin && git rebase origin/master
 who = shortlog -n -s --no-merges
 deletetag = !git tag -d $1 && git push origin :refs/tags/$1
 countmaster = !git rev-list --count HEAD ^master
 showlist = !git show --pretty="format:" --name-only
[core]
 editor = vim
[branch "master"]
 remote = origin
 merge = refs/heads/master
[push]
  default = upstream
[branch]
  autosetuprebase= always

